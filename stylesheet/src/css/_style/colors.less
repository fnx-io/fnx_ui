
// http://www.google.com/design/spec/style/color.html#color-color-palette

html {
    background-color: @colorBackground;
    color: @colorText;
}

a {
    color: @colorLink;
    &:visited {
        color: @colorLink;
    }
}
.renderBgAndText(@hexa) {
    background-color: @hexa;
    & when (luma(color(@hexa)) <= 60%) {
        color: #eee;
        a, a:visited {
            color: #eee;
        }
    }
    & when (luma(color(@hexa)) > 40%) {
        color: @colorText;
        a, a:visited {
            color: @colorText;
        }
    }
}
.renderColorSettings(@hexa) {
    background-color: @hexa;
    &.btn {
        border-color: @hexa;
    }
    & when (luma(color(@hexa)) <= 60%) {
        color: #eee;
        &.btn {
            color: #eee !important;
            &:hover {
                background-color: lighten(color(@hexa), 10%);
            }
        }
        a, a:visited {
            color: #fff;
        }
        .menu--horizontal, .menu--vertical, &.menu--horizontal, &.menu--vertical {
            li:hover {
                background-color: lighten(color(@hexa), 10%);
            }
        }
    }
    & when (luma(color(@hexa)) > 40%) {
        color: @colorText;
        &.btn {
            color: @colorText !important;
            &:hover {
                background-color: darken(color(@hexa), 10%);
            }
        }
        a, a:visited {
            color: #000;
        }
        .menu--horizontal, .menu--vertical, &.menu--horizontal, &.menu--vertical {
            li:hover {
                background-color: darken(color(@hexa), 10%);
            }
        }
    }
}
.renderTheme(@hexaColor, @themeName) {
    .primary--@{themeName} {
        .picker__header,
        .navbar,
        .menu--horizontal {
            .renderBgAndText(@hexaColor);
        }
        & when (luma(color(@hexaColor)) <= 60%) {
            .important {
                .renderBgAndText(lighten(color(@hexaColor), 20%));
            }
            .menu--horizontal .menu--vertical {
                .renderBgAndText(lighten(color(@hexaColor), 5%));
            }
        }
        & when (luma(color(@hexaColor)) > 40%) {
            .important {
                .renderBgAndText(darken(color(@hexaColor), 20%));
            }
            .menu--horizontal .menu--vertical {
                .renderBgAndText(darken(color(@hexaColor), 5%));
            }
        }
    }
    .secondary--@{themeName} {
        .selected, .menu--horizontal > li:hover, .menu--vertical > li:hover {
            .renderBgAndText(@hexaColor);
        }
        .select__dropdown > ul > li:hover {
            .renderBgAndText(@hexaColor);
        }
        .picker--date {
            td, .icon, a {
                &:hover {
                    .renderBgAndText(@hexaColor);
                }
            }
        }
    }
}
.renderColorRules(@hexa, @name) {

    .bg--@{name} {
        .renderColorSettings(@hexa);
        &--l1 {
            .renderColorSettings(lighten(color(@hexa), 10%));
        }
        &--l2 {
            .renderColorSettings(lighten(color(@hexa), 20%));
        }
        &--l3 {
            .renderColorSettings(lighten(color(@hexa), 30%));
        }
        &--l4 {
            .renderColorSettings(lighten(color(@hexa), 40%));
        }
        &--d1 {
            .renderColorSettings(darken(color(@hexa), 10%));
        }
        &--d2 {
            .renderColorSettings(darken(color(@hexa), 20%));
        }
        &--d3 {
            .renderColorSettings(darken(color(@hexa), 30%));
        }
        &--d4 {
            .renderColorSettings(darken(color(@hexa), 40%));
        }
    }
    body {
        .text--@{name} {
            color: @hexa;
            &--l1 {
                color: (lighten(color(@hexa), 10%));
            }
            &--l2 {
                color: (lighten(color(@hexa), 20%));
            }
            &--l3 {
                color: (lighten(color(@hexa), 30%));
            }
            &--l4 {
                color: (lighten(color(@hexa), 40%));
            }
            &--d1 {
                color: (darken(color(@hexa), 10%));
            }
            &--d2 {
                color: (darken(color(@hexa), 20%));
            }
            &--d3 {
                color: (darken(color(@hexa), 30%));
            }
            &--d4 {
                color: (darken(color(@hexa), 40%));
            }
        }
    }

    .renderTheme(@hexa, @name);

    .renderTheme(lighten(color(@hexa), 10%), ~"@{name}--l1");
    //.renderTheme(lighten(color(@hexa), 20%), ~"@{name}--l2");
    //.renderTheme(lighten(color(@hexa), 30%), ~"@{name}--l3");
    //.renderTheme(lighten(color(@hexa), 40%), ~"@{name}--l4");
    .renderTheme(darken(color(@hexa), 10%), ~"@{name}--d1");
    //.renderTheme(darken(color(@hexa), 20%), ~"@{name}--d2");
    //.renderTheme(darken(color(@hexa), 30%), ~"@{name}--d3");
    //.renderTheme(darken(color(@hexa), 40%), ~"@{name}--d4");
}

html {
    .renderColorRules(#000, black);
    .renderColorRules(#fff, white);
    .renderColorRules(@colorRed, red);
    .renderColorRules(@colorPink, pink);
    .renderColorRules(@colorPurple, purple);

    .renderColorRules(@colorDeepPurple, deep-purple);
    .renderColorRules(@colorIndigo, indigo);
    .renderColorRules(@colorBlue, blue);
    .renderColorRules(@colorLightBlue, light-blue);
    .renderColorRules(@colorCyan, cyan);
    .renderColorRules(@colorTeal, teal);

    .renderColorRules(@colorGreen, green);
    .renderColorRules(@colorLightGreen, light-green);
    .renderColorRules(@colorLime, lime);

    .renderColorRules(@colorYellow, yellow);
    .renderColorRules(@colorAmber, amber);
    .renderColorRules(@colorOrange, orange);
    .renderColorRules(@colorDeepOrange, deep-orange);
    .renderColorRules(@colorBrown, brown);
    .renderColorRules(@colorGrey, grey);
    .renderColorRules(@colorBlueGrey, blue-grey);
}